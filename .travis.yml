#
# This travis-ci build matrix config is a modified copy of the one from Astropy
#


# We can't use `language: python` here because it's not supported on Mac.
# But that's OK ... the language here is irrelevant because we use conda
# to install our own Python.
language: c
arch:
    - amd64
    - ppc64le

os:
    - linux

addons:
  apt:
    packages: &default_apt
      - graphviz
      - texlive-latex-extra
      - dvipng


env:
    global:
        - PYTHON_VERSION=3.7
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - ASTROPY_USE_SYSTEM_PYTEST=1

        - CONDA_DEPENDENCIES='Cython click scipy healpy matplotlib pyyaml pandas naima sherpa regions reproject pandoc ipython iminuit tqdm requests'
        - CONDA_DEPENDENCIES_OSX='Cython click scipy healpy matplotlib pyyaml pandas naima sherpa regions reproject pandoc ipython iminuit tqdm requests'
        - CONDA_DEPENDENCIES_WO_SHERPA='Cython click scipy healpy matplotlib pyyaml pandas naima regions reproject pandoc ipython iminuit tqdm requests'
        - CONDA_DEPENDENCIES_DOCS='Cython click scipy healpy matplotlib pyyaml pandas naima pygments sherpa regions reproject pandoc ipython jupyter iminuit tqdm requests'

        - PIP_DEPENDENCIES='nbsphinx sphinx-astropy sphinx-gallery sphinx-click sphinx_rtd_theme pytest-astropy parfive pydantic pytest-astropy-header'

        - CONDA_CHANNELS='astropy sherpa'
        - FETCH_GAMMAPY_DATA=true
        - TEST_COVERAGE=false
        - TEST_PACKAGING=false
        - RUN_INSTALL=true
        - DEBUG=True

stages:
   # Do the style check and a single test job, don't proceed if it fails
   - name: Initial tests
   # Test docs, dev dependencies, and without optional dependencies
   - name: Comprehensive tests

jobs:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Main test, used for coverage
        - stage: Initial tests
          env: TEST_COVERAGE=true CMD='make test-cov'
               PIP_DEPENDENCIES="$PIP_DEPENDENCIES pytest-cov codecov"

        # MacOS X tests
        - os: osx
          env: PYTHON_VERSION=3.7 CMD='make test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_OSX

        # Run tests without optional dependencies
        - env: PYTHON_VERSION=3.7 CMD='make test'
               CONDA_DEPENDENCIES='Cython click regions requests tqdm'
               PIP_DEPENDENCIES='pytest-astropy parfive pydantic'

        # Run tests without GAMMAPY_DATA available
        - stage: Initial tests
          env: CMD='make test'
               FETCH_GAMMAPY_DATA=false

        # Build docs
        - env: CMD='make docs-all fmt=False'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_DOCS

        # Test conda build (which runs a bunch of useful tests after building the package)
        # See https://conda.io/docs/bdist_conda.html
        - env: CMD='python setup.py bdist_conda'
               TEST_PACKAGING=true CONDA_CHANNELS='astropy sherpa conda-forge'

        # Test with Astropy dev version
        - env: PYTHON_VERSION=3.7 ASTROPY_VERSION=dev CMD='make test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES

        # Test with Astropy dev version
        - env: PYTHON_VERSION=3.7 ASTROPY_VERSION=4.0 CMD='make test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES

        # Test with Sherpa dev, this may take a longer time
        - env: PYTHON_VERSION=3.7 SETUP_CMD='make test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_WO_SHERPA DEBUG=True
               PIP_DEPENDENCIES='git+http://github.com/sherpa/sherpa.git#egg=sherpa pytest-astropy parfive pydantic'

        # Test Jupyter notebooks
        - env: PYTHON_VERSION=3.7 CMD='make test-nb'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_DOCS

        # Test example scripts
        - env: PYTHON_VERSION=3.7 CMD='make test-scripts'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES


install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    # From https://conda.io/docs/bdist_conda.html
    # bdist_conda must be installed into a root conda environment,
    # as it imports conda and conda_build. It is included as part of the conda build package.
    - if $TEST_PACKAGING; then
          conda install -n root conda-build astropy Cython click regions pydantic;
          conda info;
          conda --version;
          conda build --version;
          conda activate root;
      fi

    # This is needed to make matplotlib plot testing work
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
          export DISPLAY=:99.0;
          sh -e /etc/init.d/xvfb start;
          export QT_API=pyqt;
      fi

script:
    - if $FETCH_GAMMAPY_DATA; then
          export GAMMAPY_DATA=${HOME}/gammapy-data;
          pip install -e .;
          gammapy download datasets --out=$GAMMAPY_DATA --tests --silent;
      fi

    - if $RUN_INSTALL; then
          pip install -e .;
      fi

    - $CMD

after_success:
    - if $TEST_COVERAGE; then
          codecov -X gcov;
      fi
